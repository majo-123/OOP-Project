/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oop_dbms;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Queue extends javax.swing.JFrame {

    /**
     * Creates new form Queue
     */
    public Queue() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        queueTable = new javax.swing.JTable();
        btncomplete = new javax.swing.JButton();
        btnhome = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0,80));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        queueTable.setBackground(new java.awt.Color(51, 51, 51));
        queueTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        queueTable.setForeground(new java.awt.Color(255, 255, 255));
        queueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order No.", "Name", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(queueTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 587, 640));

        btncomplete.setBackground(new java.awt.Color(0, 0, 0));
        btncomplete.setForeground(new java.awt.Color(255, 255, 255));
        btncomplete.setText("COMPLETE");
        btncomplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncompleteActionPerformed(evt);
            }
        });
        jPanel1.add(btncomplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 690, 140, 37));

        btnhome.setBackground(new java.awt.Color(0, 0, 0));
        btnhome.setForeground(new java.awt.Color(255, 255, 255));
        btnhome.setText("home");
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });
        jPanel1.add(btnhome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Montserrat ExtraBold", 1, 35)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 0));
        jLabel5.setText("QUEUE");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 150, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1430, 820));

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Isabella\\Documents\\NetbeansProjects\\jnfvdkj\\Opening (1).png")); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-70, -60, 1500, 920));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
    new home().setVisible(true);
    dispose();        
    }//GEN-LAST:event_btnhomeActionPerformed

    private void btncompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncompleteActionPerformed
    Connection conn = null;
    PreparedStatement pstmt = null;

        try {
            String url = "jdbc:mysql://localhost:3306/marjodb";
            String user = "root";
            String pass = "03182005Elola";
            conn = DriverManager.getConnection(url, user, pass);
            if (queueTable.getRowCount() > 0) {
                int firstRowId = (Integer) queueTable.getValueAt(0, 0);

                String deleteSql = "DELETE FROM transferredtable WHERE ID = ?";
                pstmt = conn.prepareStatement(deleteSql);
                pstmt.setInt(1, firstRowId);
                pstmt.executeUpdate();

                ((DefaultTableModel) queueTable.getModel()).removeRow(0);
                
                queueDisplay();
                JOptionPane.showMessageDialog(null, "Order is Completed");
            } else {
                JOptionPane.showMessageDialog(null, "No rows to delete.");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error while deleting the record.");
        } finally {
            try {
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        };
    }//GEN-LAST:event_btncompleteActionPerformed

    public void queueDisplay() {
Connection conn = null;
PreparedStatement pstmt = null;
PreparedStatement updatePstmt = null;
ResultSet rs = null;

String url = "jdbc:mysql://localhost:3306/marjodb";
String user = "root";
String pass = "03182005Elola";

try {

    conn = DriverManager.getConnection(url, user, pass);
    String sql = "SELECT name, category, ID FROM transferredtable";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();

    DefaultTableModel model = new DefaultTableModel(new String[]{"Order No.", "Product Name", "Category"}, 0);
    List<Integer> existingIds = new ArrayList<>();

    while (rs.next()) {
        String name = rs.getString("name");
        String category = rs.getString("category");
        int id = rs.getInt("ID");

        existingIds.add(id);
        
        model.addRow(new Object[]{id, name, category});
    }
    queueTable.setModel(model);

    int newId = 1; 
    for (int i = 0; i < existingIds.size(); i++) {
        int currentId = existingIds.get(i);

        if (currentId != newId) {
            updatePstmt = conn.prepareStatement("UPDATE transferredtable SET ID = ? WHERE ID = ?");
            updatePstmt.setInt(1, newId);
            updatePstmt.setInt(2, currentId);
            updatePstmt.executeUpdate();
            existingIds.set(i, newId);
            model.setValueAt(newId, i, 0); 
        }
        newId++;
    }

} catch (SQLException e) {
    e.printStackTrace();
} finally {
    try {
        if (rs != null) rs.close();
        if (pstmt != null) pstmt.close();
        if (updatePstmt != null) updatePstmt.close();  // Close updatePstmt if it was opened
        if (conn != null) conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Queue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Queue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Queue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Queue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Queue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncomplete;
    private javax.swing.JButton btnhome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable queueTable;
    // End of variables declaration//GEN-END:variables
}
